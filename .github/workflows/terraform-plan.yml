name: Terraform Plan on PR

on:
  pull_request:
    branches:
      - main

jobs:
  plan:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write # Needed to comment on PR
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.x.x # Specify your version

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }} # Or your cloud provider's env vars
        run: terraform plan -no-color -input=false -out=tfplan
        continue-on-error: true # Allow subsequent steps even if plan fails (e.g., to comment)

      - name: Save Terraform Plan to artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: tfplan
          if-no-files-found: ignore # Don't fail if plan didn't generate (e.g., on error)

      - name: Output Terraform Plan to PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const planOutput = fs.existsSync('plan.txt') ? fs.readFileSync('plan.txt', 'utf8') : 'No plan generated or plan failed. See workflow logs for details.';
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Terraform Plan\n\`\`\`terraform\n${planOutput}\n\`\`\`\n`
            });