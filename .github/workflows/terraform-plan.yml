name: Terraform Plan on PR

on:
  pull_request:
    branches:
      - main

jobs:
  plan:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Notify on fmt failure
        if: ${{ steps.fmt.outcome == 'failure' }}
        uses: suhasrpatil/gh-action-demo/.github/workflows/slack-notify.yml@tf-demo
        with:
          status: failure
          step: fmt
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./terraform-aws-s3-demo/

      - name: Terraform Validate
        id: validate
        run: terraform validate
        continue-on-error: true

      - name: Notify on Validation Failure
        if: ${{ steps.validate.outcome == 'failure' }}
        uses: suhasrpatil/gh-action-demo/.github/workflows/slack-notify.yml@tf-demo
        with:
          status: failure
          step: validate
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}


      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false -out=tfplan
        working-directory: ./terraform-aws-s3-demo/
        continue-on-error: true

      - name: Read Terraform Plan Output (for PR comment)
        id: read_plan_output
        if: always()
        run: |
          # Only try to show if tfplan artifact was created
          if [ -f tfplan ]; then
            terraform show -no-color tfplan > plan.txt
          else
            echo "Terraform plan failed to generate a plan file. See workflow logs for details." > plan.txt
          fi
        working-directory: ./terraform-aws-s3-demo/

      - name: Upload Terraform Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: terraform-aws-s3-demo/tfplan
          if-no-files-found: ignore

      - name: Output Terraform Plan to PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const planOutputFilePath = 'terraform-aws-s3-demo/plan.txt';
            const planOutput = fs.existsSync(planOutputFilePath) ? fs.readFileSync(planOutputFilePath, 'utf8') : 'Error reading plan output. See workflow logs for details.';
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Terraform Plan\n\`\`\`terraform\n${planOutput}\n\`\`\`\n`
            });

      - name: Notify on Plan failure
        if: ${{ steps.plan.outcome == 'failure' }}
        uses: suhasrpatil/gh-action-demo/.github/workflows/slack-notify.yml@tf-demo
        with:
          status: failure
          step: plan
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}


      - name: Send Slack Notification on Plan Success
        if: ${{ steps.plan.outcome == 'success' }}
        uses: suhasrpatil/gh-action-demo/.github/workflows/slack-notify.yml@tf-demo
        with:
          status: success
          step: plan
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}



#        if: ${{ success() && steps.plan.outcome == 'success' }}
#        uses: slackapi/slack-github-action@v1.23.0
#        with:
#          channel-id: 'C097G9TNLA1'
#          payload: |
#            {
#              "text": "Terraform Plan Succeeded!",
#              "attachments": [
#                {
#                  "color": "#2eb886",
#                  "blocks": [
#                    {
#                      "type": "section",
#                      "text": {
#                        "type": "mrkdwn",
#                        "text": ":white_check_mark: *Terraform Plan Succeeded!*"
#                      }
#                    },
#                    {
#                      "type": "section",
#                      "fields": [
#                        { "type": "mrkdwn", "text": "*Repository:*\n`${{ github.repository }}`" },
#                        { "type": "mrkdwn", "text": "*Branch:*\n`${{ github.head_ref || github.ref_name }}`" },
#                        { "type": "mrkdwn", "text": "*Commit:*\n`${{ github.sha }}`" },
#                        { "type": "mrkdwn", "text": "*Workflow:*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View>" }
#                      ]
#                    }
#                  ]
#                }
#              ]
#            }
#
#        env:
#          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
