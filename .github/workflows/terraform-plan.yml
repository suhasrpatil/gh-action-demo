name: Terraform Plan on PR

on:
  pull_request:
    branches:
      - main

jobs:
  plan:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

#      - name: Terraform Format Check
#        id: fmt
#        run: terraform fmt -check -recursive
#        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./terraform-aws-s3-demo/

#      - name: Terraform Validate
#        id: validate
#        run: terraform validate

      - name: Terraform Plan
        id: plan
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} ###
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: terraform plan -no-color -input=false -out=tfplan
        working-directory: ./terraform-aws-s3-demo/
        continue-on-error: true

      - name: Read Terraform Plan Output (for PR comment)
        id: read_plan_output
        if: always()
        run: |
          # Only try to show if tfplan artifact was created
          if [ -f tfplan ]; then
            terraform show -no-color tfplan > plan.txt
          else
            echo "Terraform plan failed to generate a plan file. See workflow logs for details." > plan.txt
          fi
        working-directory: ./terraform-aws-s3-demo/

      - name: Upload Terraform Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: terraform-aws-s3-demo/tfplan
          if-no-files-found: ignore

      - name: Output Terraform Plan to PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const planOutputFilePath = 'terraform-aws-s3-demo/plan.txt';
            const planOutput = fs.existsSync(planOutputFilePath) ? fs.readFileSync(planOutputFilePath, 'utf8') : 'Error reading plan output. See workflow logs for details.';
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Terraform Plan\n\`\`\`terraform\n${planOutput}\n\`\`\`\n`
            });

      - name: Send Slack Notification on Plan Failure
        if: ${{ failure() && steps.plan.outcome == 'failure' }}
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |  # <-- This 'payload:' must be indented exactly under 'with:'
            {            # <-- This opening brace '{' must be indented by 2 spaces relative to 'payload:'
              "text": ":x: *Terraform Plan Failed!*",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":x: *Terraform Plan Failed!*"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Repository:*\n`${{ github.repository }}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:*\n`${{ github.head_ref || github.ref_name }}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commit:*\n`${{ github.sha }}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Workflow Run:*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Workflow>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Pull Request:*\n<${{ github.event.pull_request.html_url }}|#${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}>"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      # --- New Slack Notification for Success ----
      - name: Send Slack Notification on Plan Success
        if: ${{ success() && steps.plan.outcome == 'success' }}
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |  # <-- This 'payload:' must be indented exactly under 'with:'
            {            # <-- This opening brace '{' must be indented by 2 spaces relative to 'payload:'
              "text": ":x: *Terraform Plan Failed!*",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":x: *Terraform Plan Failed!*"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Repository:*\n`${{ github.repository }}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:*\n`${{ github.head_ref || github.ref_name }}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commit:*\n`${{ github.sha }}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Workflow Run:*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Workflow>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Pull Request:*\n<${{ github.event.pull_request.html_url }}|#${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}>"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}