<?xml version="1.0" encoding="utf-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<Server port="8005" shutdown="SHUTDOWN">
    <Listener className="org.apache.catalina.startup.VersionLoggerListener"/>
    <Listener className="org.apache.catalina.core.AprLifecycleListener" SSLEngine="on"/>
    <Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener"/>
    <Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener"/>
    <Listener className="org.apache.catalina.core.ThreadLocalLeakPreventionListener"/>

    <!-- A "Service" is a collection of one or more "Connectors" that share
        a single "Container" Note:  A "Service" is not itself a "Container",
        so you may not define subcomponents such as "Valves" at this level.
        Documentation at /docs/config/service.html
    -->
    <Service name="Catalina">

        <Connector port="{{ jira_server.connector_port|default("8080") }}"
                   relaxedPathChars="[]|"
                   relaxedQueryChars="[]|{}^&#x5c;&#x60;&quot;&lt;&gt;"
                   maxThreads="{{ jira_server.max_threads|default("150") }}"
                   minSpareThreads="{{ jira_server.min_spare_threads|default("25") }}"
                   connectionTimeout="{{ jira_server.connection_timeout|default("20000") }}"
                   enableLookups="false"
                   maxHttpHeaderSize="{{ jira_server.max_http_header_size|default("8192") }}"
                   protocol="HTTP/1.1"
                   useBodyEncodingForURI="true"
                   redirectPort="8443"
                   acceptCount="100"
                   disableUploadTimeout="true"
                   bindOnInit="false"
                   proxyName="{{ jira_proxy_name }}"
                   proxyPort="{{ jira_proxy_port|default("443") }}"
                   scheme="{{ jira_proxy_scheme|default("https") }}"
                   secure="true"/>

        <!--
        ====================================================================================

        Bypass loadbalancer by allowing integrating services using IP and port (for example http://127.0.0.1:8080)

        ====================================================================================
        -->
{% if JIRA_ENABLE_ACCESS_VIA_LOCAL_CONNECTOR|default(False) == False %}<!--{% endif %}
        <Connector port="8081"
                   bindOnInit="false"
                   disableUploadTimeout="true"
                   acceptCount="100"
                   redirectPort="8443"
                   useBodyEncodingForURI="true"
                   protocol="HTTP/1.1"
                   maxHttpHeaderSize="8192"
                   enableLookups="false"
                   connectionTimeout="20000"
                   minSpareThreads="25"
                   maxThreads="150"
                   relaxedPathChars="[]|"
                   relaxedQueryChars="[]|{}^\`&quot;&lt;&gt;"/>
{% if JIRA_ENABLE_ACCESS_VIA_LOCAL_CONNECTOR|default(False) == False %}-->{% endif %}
        <!--
        ====================================================================================

        For full steps on running JIRA over SSL or HTTPS for production and testing, see:
            http://confluence.atlassian.com/display/JIRA/Running+JIRA+over+SSL+or+HTTPS
        and
            http://tomcat.apache.org/tomcat-8.5-doc/ssl-howto.html

        A quicker method can be found below, which we recommend only for evaluation and demonstration:

            * Uncomment the Connector below
            * Execute:
                %JAVA_HOME%\bin\keytool -genkey -alias tomcat -keyalg RSA (Windows)
                $JAVA_HOME/bin/keytool -genkey -alias tomcat -keyalg RSA (Unix)
                with a password value of "changeit" for both the certificate and the keystore itself.
            * If you are on JDK1.3 or earlier, download and install JSSE 1.0.2 or later, and put the JAR files into "$JAVA_HOME/jre/lib/ext"
            * Restart and visit https://localhost:8443/

        ====================================================================================
        -->
        <!--
            <Connector port="8443" protocol="org.apache.coyote.http11.Http11NioProtocol"
              maxHttpHeaderSize="8192" SSLEnabled="true"
              maxThreads="150" minSpareThreads="25"
              enableLookups="false" disableUploadTimeout="true"
              acceptCount="100" scheme="https" secure="true"
              clientAuth="false" sslProtocol="TLS" useBodyEncodingForURI="true"
              keystoreFile="/opt/bamboo-agent/.keystore"/>
        -->


        <!--
         ====================================================================================

         If you have Apache AJP Connector (mod_ajp) as a proxy in front of JIRA you should uncomment the following connector configuration line

         See the following for more information :

            http://confluence.atlassian.com/display/JIRA/Configuring+Apache+Reverse+Proxy+Using+the+AJP+Protocol

         ====================================================================================
        -->

        <!--
              <Connector port="8009" redirectPort="8443" enableLookups="false" protocol="AJP/1.3" URIEncoding="UTF-8"/>
        -->

        <Engine name="Catalina" defaultHost="localhost">
            <Host name="localhost" appBase="webapps" unpackWARs="true" autoDeploy="true">

                <Context path="{{ jira_context_path|default("") }}" docBase="${catalina.home}/atlassian-jira" reloadable="false" useHttpOnly="true">
                    <Resource name="UserTransaction" auth="Container" type="javax.transaction.UserTransaction"
                              factory="org.objectweb.jotm.UserTransactionFactory" jotm.timeout="60"/>
                    <Manager pathname=""/>
                    <JarScanner scanManifest="false"/>
                    <Valve className="org.apache.catalina.valves.StuckThreadDetectionValve" threshold="120" />
                </Context>

            </Host>
            <Valve className="org.apache.catalina.valves.RemoteIpValve"
{% if JIRA_XFORWARDED_FOR_VALVE_IP_PROXY is defined %}
{# By default, 10/8, 192.168/16, 169.254/16, 127/8, 100.64/10, 172.16/12, and ::1 are allowed. #}
                internalProxies="{{ JIRA_XFORWARDED_FOR_VALVE_IP_PROXY }}"
{% endif %}
                remoteIpHeader="x-forwarded-for"
                remoteIpProxiesHeader="x-forwarded-by"
                protocolHeader="x-forwarded-proto"
                />
            <Valve className="org.apache.catalina.valves.AccessLogValve"
                requestAttributesEnabled="true"
                pattern="%t %a %{jira.request.username}r %I &quot;%m %U%{sanitized.query}r %H&quot; %s %Dms %b &quot;%{sanitized.referer}r&quot; &quot;%{User-Agent}i&quot; &quot;%{jira.request.assession.id}r&quot;"
                rotatable="true"
                suffix=".log"
                />
        </Engine>
    </Service>
</Server>
